* 网站改https访问
** 参考 http://acme.sh/  中文https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E
** 步骤
*** 1.install
  - curl  https://get.acme.sh | sh 
*** 2,alias 
  - acme.sh=~/.acme.sh/acme.sh
*** 3.acme指令
- 1. 执行 acme.sh --issue -d *.myweb.com  -d myweb.com --dns \
 --yes-I-know-dns-manual-mode-enough-go-ahead-please
 
[2019-02-20 fix
sudo ~/.acme.sh/acme.sh --issue --force -d skrskr.online -d *.skrskr.online --dns --yes-I-know-dns-manual-mode-enough-go-ahead-please ]
 
- 2. 出现如下信息
  - [Fri May 18 10:53:44 CST 2018] Add the following TXT record:
  - [Fri May 18 10:53:44 CST 2018] Domain: '_acme-challenge.cowkeys.me' <-这里
  - [Fri May 18 10:53:44 CST 2018] TXT value: 'e_GHac5gARINJsHDuIzR1eidOHVsCU86MFLYJ3UX0ak' <-这里
  - [Fri May 18 10:53:44 CST 2018] Please be aware that you prepend _acme-challenge. before your domain
  - [Fri May 18 10:53:44 CST 2018] so the resulting subdomain will be: _acme-challenge.cowkeys.me
  - [Fri May 18 10:53:44 CST 2018] Add the following TXT record:
  - [Fri May 18 10:53:44 CST 2018] Domain: '_acme-challenge.cowkeys.me' <-这里
  - [Fri May 18 10:53:44 CST 2018] TXT value: '4pUBNqp20W0o4IpwnU3OYPbWbnzHS06Rk_7kNMKbeOQ' <-这里
- 3. 在域名解析加入2条txt记录：
  - _acme-challenge.cowkeys.me
    - e_GHac5gARINJsHDuIzR1eidOHVsCU86MFLYJ3UX0ak
  - _acme-challenge.cowkeys.me
    - 4pUBNqp20W0o4IpwnU3OYPbWbnzHS06Rk_7kNMKbeOQ

*** 4.renew
  - acme.sh --renew -d *.myweb.com  -d myweb.com --dns --yes-I-know-dns-manual-mode-enough-go-ahead-please

*** 5.把.~/.acme.sh/*.cowkeys.me/目录下的fullchain.cer 和key文件(可重命名） 放到服务器上

*** 6.linux_nginx 配置示例
#+begin_src
server {
        listen 80 default;
        listen 443 ssl;

        server_name cowkeys.me;
        ssl on;
          ssl_certificate /root/sshfile/fullchain.cer;
          ssl_certificate_key /root/sshfile/cowkeys.key;
          ssl_session_timeout  5m;
          ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
          ssl_prefer_server_ciphers   on;

        add_header Strict-Transport-Security "max-age=31536000 " always;

        location / {
                proxy_pass http://127.0.0.1:8088;
        }
}
#+end_src

*** 7.nginx -t 验证 配置
*** 8.service nginx reload 
*** 9.注意 打开443端口
