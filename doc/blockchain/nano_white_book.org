* Nano: A Feeless Distributed Cryptocurrency Network
+ translated by google
+ https://nano.org/en/whitepaper
** 摘要
+ 最近，高需求和有限的可扩展性增加了流行的平均交易时间和费用加密货币，产生不令人满意的经验。在这里，我们引入Nano: 
  - 一种具有新型块格结构的加密货币每个账户都有自己的区块链，交付接近即时交易速度和无限可扩展性。每个用户都有自己的区块链，允许他们更新它与网络的其他部分异步，导致速度很快交易以最小的开销。交易保持跟踪账户余额，而不是交易金额，允许积极的数据库修剪而不影响安全性。
  - 至迄今为止，纳米网络已经处理了420万笔交易与未拆分的总帐大小只有1.7GB。纳米的毫无价值，瞬间交易使其成为最主要的加密货币消费者交易。

** 一、导言
+ 自2009年推出比特币以来，已经有了已经越来越远离传统的政府支持货币和金融体系转向现代支付基于密码学的系统提供了这种能力以无信任和安全的方式存储和转移资金
  - 为了有效运作，货币必须是易于转让，不可逆转，并且收费有限或不收费。交易时间增加，收费高，并且有问题网络可扩展性提出了实用性的问题的比特币作为日常货币。
  - 在本文中，我们将介绍一种低延迟加密货币Nano建立在创新的块格数据结构上提供无限的可扩展性和无交易费用。nano在设计上是一个简单的协议，其唯一目的就是存在一个高性能的加密货币。
  - 纳米协议可以在低功耗硬件上运行，使其成为实用，日常使用的分散加密货币。本文中报告的加密货币统计数据是准确的截至发布日期。

** 二、背景
+ 2008年，一名匿名个人以笔名Satoshi Nakamoto发表了一份白皮书，概述了这个问题世界上第一个分散加密货币，比特币。 
  - 关键比特币带来的创新是区块链，a公共的，不可变的和分散的数据结构用作货币交易的分类账。 
  - 不幸，随着比特币的成熟，协议中的几个问题使得比特币对于许多应用程序来说是禁止的。
    - 1）可扩展性差：区块链中的每个区块都可以存储数量有限，这意味着系统可以每秒只处理如此多的事务，使得在一个商品块中。 目前的中位数交易费用为10.38美元。
    - 2）高延迟：平均确认时间为164分钟。
    - 3）电力低效：比特币网络消耗估计每年27.28TWh，平均使用260KWh每笔交易。

+ 比特币和其他加密货币通过实现而起作用对其全球分类账的共识以验证合法性同时抵制恶意行为者的交易。
+ 比特币达到通过称为工作证明的经济措施达成共识（POW）。在PoW系统中，参与者竞争计算a号码，称为随机数，这样整个块的散列在目标范围内。这个有效范围是成反比的到整个比特币的累计计算能力网络，以保持一致的平均时间找到一个有效的随机数。然后允许有效随机数的查找器将区块添加到区块链;因此，那些谁耗尽更多计算资源来计算随机数在区块链的状态中发挥更大的作用。 PoW提供抵抗Sybil攻击，一个实体的行为如同多个实体获得分散的额外权力系统，也大大减少了固有的竞争条件在访问全球数据结构时存在。
+ 另一个共识协议，股权证明（PoS），由Peercoin于2012年首次推出[5]。在PoS系统中，参与者用相当于该数量的重量投票他们在给定的加密货币中拥有的财富。有了这个安排，那些谁有更大的财政投入给予更多的权力，并从内在激励维护系统的诚实或者失去投资的风险。销售点消除浪费的计算能力竞争，只需要以低功耗运行的轻量级软件硬件。
+ 最初的nano（RaiBlocks）论文和第一个测试版实现于2014年12月发布，成为其中一个第一个基于定向非循环图（DAG）的加密货币。 不久之后，其他DAG加密货币开始了开发，最值得注意的是DagCoin / Byteball和IOTA。
+ 这些基于DAG的加密货币打破了区块链提高系统性能和安全性。Byteball依靠所构成的“主链”达成共识诚实，有信誉和用户信任的“证人”，而IOTA通过堆叠式交易的累计供应量达成共识。纳米通过对冲突交易的平衡加权投票达成共识。 这个共识系统提供了更快，更确定的交易，同时仍然保持一个强大的，分散的系统。 nano继续这一发展并将自己定位为最佳表现之一cryptocurrencies。

** III。 纳米组分
+ 在描述整个纳米体系结构之前，我们定义构成系统的各个组件。
  - A.帐户
    - 帐户是数字签名密钥对的公钥部分。 公共密钥也称为地址，与其他网络参与者共享，而私人密钥则保密。 数字签名的数据包确保内容得到了私钥持有者的认可。 一个用户可以控制多个帐户，但每个帐户只能存在一个公共地址。
  - B.阻止/交易
    - 术语“块”和“交易”通常可以互换使用，其中块包含单个交易。 交易专指交易的数字编码，而块指的是交易的数字编码。 事务由属于执行事务的帐户的私钥签名。
+ C.总帐
  - 分类账是每个账户拥有自己的交易链的全球账户（图2）。 这是一个关键设计组件，属于用设计时协议取代运行时协议的类别; 每个人都同意viasignature检查，只有一个帐户所有者可以修改自己的链。 这将看似共享的数据结构（分布式账本）转换为一组非共享数据结构。

+ D.节点
  - 节点是运行在计算机上的一种软件，符合纳米协议并参与纳米网络。 该软件管理分类账和任何账户节点可以控制（如果有的话）。 节点可以存储全额分类账或修剪后的历史记录，仅包含每个账户区块链的最后几个区块。 建立新节点时，建议验证整个历史记录并进行编程。

** V。系统总览
+ 与许多其他加密货币中使用的区块链不同，Nano使用块晶格结构。每个账户都有自己的区块链（账户链），相当于账户的交易/余额历史记录（图2）。每个账户链只能由账户所有者更新;这允许每个账户链立即和异步地更新到块格的其余部分，从而实现快速交易。纳米的协议是非常轻量级的;每个事务符合所需的最小UDP分组大小以通过互联网传输。节点的硬件需求也很小，因为节点只需为大多数事务记录和重播广播块（图1）。该系统始于一个包含成因平衡的起源账户。成因平衡是一个固定的数量，永远不会增加。创世平衡被划分并通过在创世纪账户链上注册的发送交易发送到其他帐户。所有账户的余额总和不会超过最初的成因平衡，从而给系统一个数量上限，而不能增加数量。本节将介绍如何在整个网络中构建和传播不同类型的交易
+ A.交易
    - 将资金从一个账户转移到另一个账户需要两笔交易：发件人从发件人的余额中扣除金额，并将收款额添加到收款账户的余额中（图3）。
    - 将金额作为发件人和收件人帐户中的单独交易进行转账有以下几个重要目的：
      - 1）排序固有异步的传入传输。
      - 2）保持交易量小到适合UDP数据包。
      - 3）通过最小化数据足迹来促进分类帐修剪。
      - 4）隔离未结算的交易。

    - 转移到同一个目标帐户的多个帐户是异步操作; 网络延迟和发送账户不一定相互通信意味着没有普遍适合的方式来知道哪个事务首先发生。 由于加法是关联的，输入序列顺序无关紧要，因此我们只需要一个全局协议。 这是将运行时协议转换为设计时协议的关键设计组件。 接收账户可以决定首先到达哪个传输，并由传入块的已签名顺序表示。

    - 如果一个帐户希望进行大量的传输，并将其作为一组很小的传输进行接收，我们希望以适合UDP数据包的方式来表示这种传输。 当接收账户对输入转移进行排序时，它会保持其账户余额的运行总额，以便在任何时候都能够使用固定大小的交易转移任何金额。 这与比特币和其他加密货币使用的输入/输出交易模型不同

    - 有些节点不愿意花费资源来存储帐户的完整交易记录; 他们只对每个账户的当前余额感兴趣。 当一个账户进行交易时，它对它的累计余额进行编码，这些节点只需要跟踪最新的块，这使得它们在保持正确性的同时丢弃历史数据。

    - 即使专注于设计时协议，由于识别和处理网络中不良参与者而在验证事务时存在延迟窗口。 由于纳米协议快速达到毫秒到秒，我们可以向用户展示两种熟悉的传入交易类别：结算和未结算。 已结算的交易是账户已生成接收块的交易。 尚未结算的交易尚未纳入接收方的累计余额。 这是其他加密货币中更复杂且不熟悉的确认度指标的替代品。

+ B.创建一个帐户
    - 要创建一个账户，您需要发行一个开放的交易（图4）。 开放式交易永远是每个账户链中的第一笔交易，并且可以在第一次收到资金时创建。 帐户字段存储公钥（地址）
    - 派生自用于签名的私钥。 源字段包含发送资金的交易的散列。 在创建账户时，必须选择代表代表您投票; 这可以稍后改变（第IV-F节）。
    - 该帐户可以声明自己是其自己的代表。

+ C.账户余额
    - 账户余额记录在账本本身内。 验证（第IV-I节）需要检查发送块的余额和前一块的余额之间的差异，而不是记录交易金额。 接收账户然后可以将之前的余额增加到新的接收块中给出的最终余额中。 这是为了在下载大量块时提高处理速度。 在请求帐户历史记录时，金额已经给出。

+ D.从帐户发送
    - 要从一个地址发送，该地址必须已经有一个已经存在的开放块，因此有一个余额（图5）。 前一个字段包含账户链中前一个块的散列。 目标字段包含要发送到的资金账户。 一旦确认发送块是不可变的。 一旦广播到网络，立即从发件人帐户的余额中扣除资金并等待直到接收方签署一个块接受这些资金。 待决资金不应被视为等待确认，因为它们与发件人帐户一样好，发件人也不能撤销交易。

+ E.接收交易为了完成交易，发送资金的接收方必须在其自己的账户链上创建一个接收块（图6）。 源字段引用关联的发送事务的散列。 一旦创建并广播了该区块，账户余额就会更新并且资金已正式转入其账户

+ F.分配代表
    - 有能力选择代表进行投票的账户持有人是一个强大的分散工具，在工作证明或证明利益协议方面没有很强的类比。 在传统的PoS系统中，账户所有者的节点必须运行才能参与投票。 对许多用户持续运行节点是不切实际的; 授予代表权力代表账户进行投票放宽了这一要求。 账户持有人有能力随时重新分配任何账户的共识。 变更交易通过从旧代表中减去投票权重并将权重添加到新代表（图7）来更改账户的代表。 这笔交易中没有资金被转移，代表也没有账户资金的消费能力。

+ G.分支和投票
    - 当j签署块b1，b2，...时发生分叉。。。 ，bj声称与他们的前任相同的块（图8）。 这些块会导致帐户状态发生冲突，必须予以解决。 只有帐户的所有者才有权在他们的帐户链中签名块，因此分支必须是帐户所有者的糟糕编程或恶意意图（双重支出）的结果。

    - 一旦检测到，代表将创建一个参考其分类账中的区块bi的投票并将其广播到网络。节点投票的权重wi是已将其命名为其代表的所有账户的余额的总和。 该节点将观察来自其他M在线代表的传入投票，并保持4个投票期（总计1分钟）的累积计数，并确认获胜块（等式1）。

    - 最受欢迎的区块b *将拥有大部分选票，并将保留在节点的分类帐（等式2）中。 丢失投票的区块将被丢弃。 如果代表取代了其分类账中的一个区块，它将创建一个具有更高序列号的新投票并将新投票广播给网络。 这是代表投票的唯一场景。

    - 在某些情况下，简短的网络连接问题可能会导致广播块无法被所有同伴接受。 该帐户的任何后续块将被忽略，因为未看到初始广播的同伴无效。 该块的重播将被其余的同伴接受，随后的块将被自动检索。 即使发生分叉或缺失块，也只有帐户交易中引用的内容受到影响; 网络的其余部分继续处理所有其他帐户的交易。

+ H.工作证明
    - 所有四种交易类型都有一个必须正确填充的工作字段。 工作字段允许交易创建者计算一个随机数，使得在接收/发送/更改交易中与先前字段连接的随机数的散列或者打开交易中的账户字段低于某个阈值。 与比特币不同的是，Nano中的PoW仅仅被用作反垃圾邮件工具，类似于Hashcash，并且可以按秒计算[9]。 一旦发送一个事务，由于前一个块字段是已知的，所以可以预先计算后续块的PoW; 只要交易之间的时间大于计算PoW所需的时间，这将使交易对最终用户即时显示。

+ I.交易验证
    - 要使块被视为有效，它必须具有以下属性：
      - 1）该块必须不在分类账中（重复交易）。
      - 2）必须由该帐户的所有者签署。
      - 3）前面的块是账户链的头块。 如果它存在但不是头部，那就是叉子。
      - 4）该账户必须有一个开放的块。
      - 5）计算的散列符合PoW阈值要求。
      - 如果它是一个接收块，检查源块哈希是否未决，这意味着它尚未被兑换。 如果它是发送块，则余额必须小于以前的余额。

** V.攻击向量
+ 与所有分散加密货币一样，纳米也可能因为企图获得财务收益或系统崩溃而受到恶意攻击。 在本节中，我们将概述一些可能的攻击情景，这种攻击的后果以及Nano的情况协议采取预防措施。

+ A.块间隙同步
    - 在第IV-G节中，我们讨论了一个块可能无法正确广播的情况，导致网络忽略后续块。 如果一个节点观察到一个没有引用的前一个块的块，它有两个选项：
      - 1）忽略该块，因为它可能是恶意垃圾块。
      - 2）请求与另一个节点重新同步。
      - 在重新同步的情况下，TCP连接必须与引导节点一起形成，以促进重新同步所需的流量增加。 但是，如果该块实际上是一个坏块，那么重新同步是不必要的，并且不必要地增加了网络上的流量。 这是网络放大攻击并导致拒绝服务。
      - 为了避免不必要的重新同步，节点将在启动到引导节点的连接以进行同步之前等待，直到观察到潜在恶意块的某个特定阈值。 如果一个块没有得到足够的投票，它可以被认为是垃圾数据。

+ B.交易泛滥
    - 恶意实体可能会在其控制下的账户之间发送许多不必要但有效的交易，试图使网络饱和。 没有交易费用，他们能够无限期地继续这种攻击。 然而，每次交易所需的工作量限制了恶意实体在不显着投资计算资源的情况下可能产生的交易率。 即使在这种攻击企图夸大分类帐的情况下，不是完整的历史节点的节点也能够从其链中删除旧的交易; 这几乎为所有用户限制了这种类型攻击的存储使用情况。

+ C. Sybil攻击
    - 一个实体可以在一台机器上创建数百个Nano节点; 然而，由于投票系统是基于账户余额加权的，因此向网络中添加额外的节点不会使攻击者获得额外的选票。 因此，通过Sybil攻击无法获得好处。

+ D. Penny-Spend攻击
    - 一分钱花费攻击是攻击者为了浪费节点的存储资源花费大量帐户的无限小数量。 块发布受到PoW的限制，因此这在一定程度上限制了帐户和交易的创建。 不是完整历史节点的节点可以在帐户最有可能不是有效帐户的统计度量标准下修剪帐户。 最后，纳米被调整为使用最小的永久存储空间，因此存储一个额外账户所需的空间与开放块的大小+索引= 96B + 32B = 128B成正比。 这相当于1GB可以存储800万便士的帐户。 如果节点想要更积极地修剪，他们可以根据访问频率计算分配，并将不常用的帐户委托给较慢的存储。

+ E.预先计算的PoW攻击
    - 由于帐户所有者将是唯一向帐户链添加块的实体，因此可以在将序列块与其PoW一起广播到网络之前计算连续块。 在这里，攻击者在一段延长的时间内产生大量的连续块，每块都有最小值。 在某个特定时刻，攻击者通过大量有效事务处理网络来执行拒绝服务（DoS），其他节点将尽可能快地处理和回应。 这是第V-B节中描述的事务泛洪的高级版本。 这样的攻击只能简单地起作用，但可以与其他攻击结合使用，例如> 50％攻击（第V-F部分）以提高效率。 目前正在研究交易速率限制和其他技术以减轻攻击。

+ F.> 50％的攻击
    - 纳米协议的衡量标准是一个平衡加权投票系统。 如果攻击者能够获得超过50％的投票力度，他们可能会导致网络振荡，导致系统崩溃。 攻击者可以通过阻止好节点通过网络DoS进行投票来降低它们必须放弃的平衡量。 纳米采取以下措施来防止此类攻击：
    - 1 针对此类攻击的主要防御措施是投票权与投资系统相关联。 账户持有人本质上被激励维持系统的诚实来保护他们的投资。 试图翻转账本会对整个系统造成破坏，从而摧毁他们的投资
    - 2 这次袭击的成本与Nano的市值成正比。 在PoW系统中，可以发明技术，与货币投资相比，可以实现不成比例的控制，如果攻击成功，则可以在攻击完成后重新利用这项技术。 用纳米攻击系统的成本随着系统本身的扩大而变化，如果攻击成功，攻击的投资就无法恢复。
    - 3 为了保持选民最大限度的法定人数，下一道防线是代表性投票。 由于连接原因而无法可靠地参与投票的账户持有人可以指定一位代表可以对余额进行投票的代表。 最大限度地增加代表的数量和多样性可以提高网络弹性。
    - 4 纳米中的叉子绝不是偶然的，因此节点可以就如何与分叉块进行交互作出政策决策。 唯一一次非攻击者帐户容易受到阻止分支的攻击，就是他们从攻击帐户收到余额。 希望从分块中获得安全性的帐户可能会等待一段时间或等待更长时间，然后才从生成分支的帐户接收或选择永不接收。 当从可疑账户接收资金以保护其他账户时，接收方也可以生成单独的账户
    - 5 尚未实施的最后一道防线是大块固井。 纳米竭尽全力通过投票快速解决分块问题。 节点可以被配置为粘合块，这将防止它们在一段时间后被回滚。 通过专注于快速建立时间来防止模糊的叉子，网络得到充分保护。

    - 图9详细描述了一个更为复杂的> 50％攻击版本。“离线”是已命名但未在线投票的代表的百分比。 “赌注”是攻击者投入的投资金额。 “主动”是根据协议在线投票的代表。 攻击者可以通过网络DoS攻击使其他选民脱机，从而抵消他们必须放弃的股份。 如果这种攻击能够持续下去，受攻击的代表将会变得不同步，这一点可以通过“不同步”来证明。最后，攻击者可以通过将拒绝服务攻击转换为一组新的代表来获得相对投票强度的短暂突发。 旧套件正在重新同步他们的账本，这是通过“攻击”来证明的。

    - 如果攻击者能够通过这些情况的组合导致“放大”>“激活”，那么他们将能够成功地在分类帐上投票，而牺牲他们的利益。 我们可以通过检查其他系统的市值来估计这种类型的攻击可能会花费多少钱。 如果我们估计有33％的代表脱机或通过DoS进行攻击，攻击者需要购买33％的市值才能通过投票来攻击系统。

+ G. Bootstrap中毒
    - 攻击者能够持有一个带有余额的旧私钥的时间越长，当时存在的余额就不会有参与代表的可能性越高，因为他们的余额或代表已转移到较新的账户。这意味着，如果一个节点被引导到网络的旧代表，攻击者拥有与当时代表相比较的投票权法定人数的法定人数，他们将能够对该节点的投票决定进行振荡。如果这个新用户想要与攻击节点以外的任何人进行交互，那么他们的所有交易将被拒绝，因为他们拥有不同的头块。最终的结果是节点可以通过给它们提供不良信息来浪费网络中新节点的时间。为了防止这种情况，节点可以与帐户和知识块头的初始数据库配对;这是将数据库一直下载到创世区块的替代品。下载越接近当前，准确防御这种攻击的概率就越高。最后，这种攻击可能并不比在引导时向节点提供垃圾数据更糟，因为它们无法与具有当代数据库的任何人交易

** VI。实施
+ 目前参考实现是用C ++实现的，并且自2014年以来一直在Github上发布

+ A.设计特点
    - 纳米实现遵循本文中概述的体系结构标准。 这里介绍其他规格。
    - 1）签名算法：
    - Nano使用经过修改的ED25519椭圆曲线算法和Blake2b哈希处理所有数字签名[11]。 ED25519被选为快速签名，快速验证和高安全性。
    - 2）散列算法：
    - 由于散列算法仅用于防止网络垃圾邮件，与基于挖掘的加密货币相比，算法选择并不重要。 我们的实现使用Blake2b作为对块内容的摘要算法[12]。
    - 3）密钥派生函数：
    - 在参考钱包中，密钥通过密码加密，密码通过密钥派生函数馈送，以防止ASIC破解企图。目前，Argon2 [13]是唯一一个旨在创建弹性密钥派生函数的公共竞赛的赢家。
    - 4）块间隔：
    - 由于每个帐户都有自己的区块链，更新可以与网络状态异步执行。因此没有块间隔，交易可以立即发布。
    - 5）UDP消息协议：
    - 我们的系统旨在尽可能使用最少量的计算资源来无限期地运行。系统中的所有消息都被设计为无状态，并且适合单个UDP数据包。这也使得具有间歇连接的简易对等体更容易参与网络，而无需重新建立短期TCP连接。当他们想要以批量方式引导块链时，TCP仅用于新的对等点。
    - 通过观察来自其他节点的事务广播流量，节点可以确定他们的事务是由网络接收的，因为它应该看到几个副本回显给自己。

+ B. IPv6和多播
    - 建立在无连接UDP之上允许将来的实现使用IPv6多播来替代传统的事务泛滥和投票广播。 这将减少网络带宽消耗，并为未来的节点提供更多的策略灵活性。

+ C.性能
    - 在撰写本文时，Nano网络已经处理了420万笔交易，产生了1.7GB的区块链大小。 交易时间以秒为单位进行计量。 在商品SSD上运行的当前参考实现可以每秒处理超过10,000个事务，主要是IO限制。

** VII。 资源使用
+ 这是对Nano节点使用的资源的概述。 此外，我们会探讨减少特定用例的资源使用情况的想法。 减少的节点通常称为轻量，修剪或简化的支付验证（SPV）节点。
+ A. 网络
    - 节点的网络活动取决于节点对网络健康的贡献程度。
    - 1）代表：代表节点需要最大的网络资源，因为它观察来自其他代表的投票流量并发布自己的投票。
    - 2）无信任：无信任节点与代表性节点相似，但只是观察者，它不包含代表性的帐户私钥并且不发布自己的投票。
    - 3）信任：信任节点观察来自其信任的一位代表的投票流量，以正确执行共识。 这减少了去往该节点的代表的入站投票流量。
    - 4）光：光节点也是一个信任节点，只监视其感兴趣的账户的流量，以允许最小的网络使用。
    - 5）引导程序：引导程序节点为正在联机的节点提供部分或全部分类帐。 这是通过TCP连接而不是UDP完成的，因为它涉及大量需要高级流量控制的数据。

+ B.磁盘容量
    - 根据用户需求，不同的节点配置需要不同的存储要求。
    - 1）历史：有兴趣保存所有事务的完整历史记录的节点将需要最大数量的存储。
    - 2）当前：由于设计中保留了块的累计余额，节点只需要保留每个账户的最新或头块以参与共识。 如果一个节点对保持完整历史不感兴趣，它可以选择只保留头块。
    - 3）灯：灯节点不保存本地总帐数据，只参与网络观察其感兴趣的帐户的活动，或者选择性地用其拥有的私钥创建新的交易。

+ C. CPU
    - 1）事务生成：对创建新事务感兴趣的节点必须产生工作证明临时数，以通过Nano的限制机制。 以各种硬件的计算为基准。
    - 2）代表p：代表必须验证块的签名和投票，并且还要签署自己的签名以参与共识。 代表性节点的CPU资源数量明显少于事务生成，并且应与当代计算机中的任何单个CPU配合使用。
    - 3）观察者：观察者节点不会生成自己的选票。 由于签名生成开销很小，因此CPU要求与运行代表性节点几乎相同。

** 八。 结论
+ 在本文中，我们介绍了一种不受信任，无需付费，低延迟的加密货币的框架，该加密货币利用了一种新的块格结构并委托了股权投票证明。该网络所需的资源极少，不需要高功率采矿硬件，并且可处理高事务吞吐量。 所有这些都是通过为每个账户设置单独的区块链实现的，消除了全球数据结构的访问问题和效率低下问题。 我们确定了系统中可能的攻击媒介，并提出了关于纳米如何抵抗这些攻击形式的论点。

** 附录A
+ POW硬件基准
  - 如前所述，Nano中的PoW旨在减少网络垃圾邮件。 我们的节点实施提供了可以利用OpenCL兼容GPU的加速功能。 表I提供了各种硬件的实际基准比较。
  - 目前，PoW阈值是固定的，但是随着平均计算能力的进步，可以实现自适应阈值。
